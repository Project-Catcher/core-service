name: Java CI with Gradle

on:
  push:
    branches:
      - kustomize

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  OIDC_ROLE_ARN: ${{ secrets.OIDC_ROLE }}
  DEPLOY_ENV: ${{ github.ref == 'refs/heads/main' && 'PROD' || 'DEV' }}
  GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
  ECR_URL: ${{ secrets.ECR_REPO_DEV }}

permissions:
  id-token: write
  contents: write
      
jobs:
  build:
    name: Build
    # runs-on: self-hosted
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew bootJar
        
      - name: Docker build
        run: docker build -t core-service .

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHubActions
          role-to-assume: ${{ env.OIDC_ROLE_ARN }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Publish Image to ECR(CORE-SERVICE)
        run: |
          docker tag core-service:latest ${{ env.ECR_URL }}:${{ github.sha }}
          docker push ${{ env.ECR_URL }}:${{ github.sha }}

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v1

      - name: Checkout for Kustomize repository
        uses: actions/checkout@v2
        with:
          repository: Project-Catcher/core-service-kusto
          ref: main
          token: ${{ env.GITHUB_TOKEN }}
          path: core-service-kusto

      - name: Update Kustomize image
        run: |
          if [ "${{ env.DEPLOY_ENV }}" == "PROD" ]; then
            KUSTOMIZE_PATH="catcher-service-kusto/k8s/overlays/production"
            FILE_NAME="production-patch.yaml"
          else
            KUSTOMIZE_PATH="catcher-service-kusto/k8s/overlays/development"
            FILE_NAME="deployment-patch.yaml"
          fi

          cd $KUSTOMIZE_PATH
          kustomize edit set image catcher-core-image=${{ env.ECR_URL }}:${{ github.sha }}
          cat kustomization.yaml
          
      - name: Commit minifest files
        run: |
          cd core-service-kusto
          git config --global user.email ${{ env.git_email }}
          git config --global user.name ${{ env.git_user }}
          git commit -am "Update image tag"
          git push -u origin main