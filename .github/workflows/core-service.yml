name: Java CI with Gradle

on:
  pull_request:
    branches: [ "Taein2-patch-1" ]

env:
  ecr_url: ${{ secrets.ECR_REPO_DEV }}
  role_arn: ${{ secrets.OIDC_ROLE }}
  aws_region: ${{ secrets.AWS_REGION }}
  git_token: ${{ secrets.GIT_TOKEN }}
  git_url: "github.com/Project-Catcher/core-service-kusto.git"
  git_user: ${{ secrets.GIT_USER }}
  git_email: ${{ secrets.GIT_EMAIL }}

permissions:
      id-token: write
      contents: read
      
jobs:
  build:
    name: Build
    # runs-on: self-hosted
    runs-on: ubuntu-latest

    permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew bootJar
        
      - name: Docker build
        run: docker build -t core-service .

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.aws_region }}
          role-session-name: GitHubActions
          role-to-assume: ${{ env.role_arn }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Publish Image to ECR(CORE-SERVICE)
        run: |
          # docker tag core-service:latest ${{ env.ecr_url }}:core-service
          # docker push ${{ env.ecr_url }}:core-service
          docker tag core-service:latest ${{ env.ecr_url }}:${{ github.sha }}
          docker push ${{ env.ecr_url }}:${{ github.sha }}

      - name: Set up Git
        run: |
          git config --global user.email ${{ env.git_email }}
          git config --global user.name ${{ env.git_user }}
          git config --global pull.rebase true
          cd ./kustomize/
          git init
          git pull https://${{ env.git_user }}:${{ env.git_token }}@${{ env.git_url }}

      - name: Edit kustomize file
        run: |
          cd ./kustomize/overlays/dev/
          kustomize edit set image catcher-core-image=${{ env.ecr_url }}:${{ github.sha }}
          kustomize build .
          cat kustomization.yaml

      - name: Commit and Push files
        run: |
          cd ./kustomize/
          git add .
          git status
          git commit -m "test commit from runner"
          git remote add origin https://${{ env.git_user }}:${{ env.git_token }}@${{ env.git_url }}
          git push -f origin main